name: "Build"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-backend:
    name: "Backend"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Build .NET solution
        run: >
          dotnet build server/ChartBackend.sln
          --configuration Release
          --property:ContinuousIntegrationBuild=true
          -warnAsError

  build-website:
    name: "Website"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install packages
        working-directory: ./client
        run: npm install

      - name: Run unit tests
        working-directory: ./client
        run: npm run test:coverage

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Jest Tests
          path: client/test-results/junit.xml
          reporter: jest-junit

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./client/coverage/lcov.info
          directory: ./client/coverage/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Coverage Report
        uses: romeovs/lcov-reporter-action@v0.3.1
        if: success() || failure()
        with:
          lcov-file: ./client/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

      - name: Add coverage to summary
        if: success() || failure()
        run: |
          echo "## 📊 Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "./client/coverage/lcov.info" ]; then
            # Extract coverage data from lcov.info
            STATEMENTS=$(grep -o "LF:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            HIT_STATEMENTS=$(grep -o "LH:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            FUNCTIONS=$(grep -o "FNF:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            HIT_FUNCTIONS=$(grep -o "FNH:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            BRANCHES=$(grep -o "BRF:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            HIT_BRANCHES=$(grep -o "BRH:[0-9]*" ./client/coverage/lcov.info | awk -F: '{sum+=$2} END {print sum}')
            
            # Calculate percentages using awk
            STMT_PCT=$(echo "$HIT_STATEMENTS $STATEMENTS" | awk '{if($2>0) printf "%.2f", $1*100/$2; else print "0"}')
            FUNC_PCT=$(echo "$HIT_FUNCTIONS $FUNCTIONS" | awk '{if($2>0) printf "%.2f", $1*100/$2; else print "0"}')
            BRANCH_PCT=$(echo "$HIT_BRANCHES $BRANCHES" | awk '{if($2>0) printf "%.2f", $1*100/$2; else print "0"}')
            
            echo "| Statements | ${STMT_PCT}% (${HIT_STATEMENTS}/${STATEMENTS}) |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | ${FUNC_PCT}% (${HIT_FUNCTIONS}/${FUNCTIONS}) |" >> $GITHUB_STEP_SUMMARY  
            echo "| Branches | ${BRANCH_PCT}% (${HIT_BRANCHES}/${BRANCHES}) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Coverage data | Not available |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📁 **Coverage report:** Check the artifacts for detailed HTML coverage report" >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage-report
          path: |
            client/coverage/
            client/test-results/

      - name: Build site
        working-directory: ./client
        run: npm run build.prod
